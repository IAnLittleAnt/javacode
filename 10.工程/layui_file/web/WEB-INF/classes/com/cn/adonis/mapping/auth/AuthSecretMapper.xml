<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.adonis.dao.auth.AuthSecretDao">
	
	<!-- 状态对象 -->
	<resultMap id="StateModel" type="com.cn.adonis.model.state.StateModel">
	   	<result column="code" property="code" jdbcType="INTEGER" />
	   	<result column="msg" property="msg" jdbcType="VARCHAR" />
		<result column="keyID" property="keyId" jdbcType="BIGINT" />
	   	<result column="count" property="count" jdbcType="INTEGER" />
	</resultMap>
	
	<!-- 密保问题对象 -->
	<resultMap id="AuthSecret" type="com.cn.adonis.entity.auth.AuthSecret">
		<id column="secretID" property="secretId" jdbcType="BIGINT" />
		<result column="userID" property="userId" jdbcType="BIGINT" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="answer" property="answer" jdbcType="VARCHAR" />
		<result column="lastUpdateTime" property="lastUpdateTime" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="VARCHAR" />
		<result column="createUserID" property="createUserId" jdbcType="BIGINT" />
		<result column="isValid" property="isValid" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="TableName"> t_auth_secret </sql>
	
	<!-- 根据用户获取密保问题 -->
	<select id="findByUser" resultMap="AuthSecret" parameterType="java.lang.Long">
		{
			call p_auth_secret_findByUser(
					#{userId,jdbcType=BIGINT,mode=IN}
				)
		}
	</select>
	
	<!-- 校验密保问题 -->
	<select id="verifySecret" resultMap="StateModel" parameterType="java.util.Map">
		{
			call p_auth_secret_verify(
					#{secretId1,jdbcType=VARCHAR,mode=IN}, 
					#{answer1,jdbcType=VARCHAR,mode=IN}, 
					#{secretId2,jdbcType=VARCHAR,mode=IN}, 
					#{answer2,jdbcType=VARCHAR,mode=IN}, 
					#{secretId3,jdbcType=VARCHAR,mode=IN}, 
					#{answer3,jdbcType=VARCHAR,mode=IN}
				)
		}
	</select>
	
	<!-- 新增密保问题 -->
	<select id="insertSecret" resultMap="AuthSecret" parameterType="com.cn.adonis.entity.auth.AuthSecret">
		{
			call p_auth_secret_insert(
					#{userId,jdbcType=BIGINT,mode=IN}, 
					#{title,jdbcType=VARCHAR,mode=IN}, 
					#{answer,jdbcType=VARCHAR,mode=IN}, 
					#{createUserId,jdbcType=BIGINT,mode=IN}
				)
		}
	</select>
	
	<!-- 修改密保问题 -->
	<select id="updateSecret" resultMap="AuthSecret" parameterType="com.cn.adonis.entity.auth.AuthSecret">
		{
			call p_auth_secret_update(
					#{secretId,jdbcType=BIGINT,mode=IN}, 
					#{title,jdbcType=VARCHAR,mode=IN}, 
					#{answer,jdbcType=VARCHAR,mode=IN}
				)
		}
	</select>
	
</mapper>